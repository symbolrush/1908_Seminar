@misc{Cotton,
author = {Cotton, Richie},
title = {{Automatically convert RUnit tests to testthat tests | 4D Pie Charts}},
url = {https://4dpiecharts.com/2014/05/12/automatically-convert-runit-tests-to-testthat-tests/},
urldate = {2017-12-12}
}
@book{Wickham2015a,
abstract = {An Essential Reference for Intermediate and Advanced R Programmers Advanced R presents useful tools and techniques for attacking many types of R programming problems, helping you avoid mistakes and dead ends. With more than ten years of experience programming in R, the author illustrates the elegance, beauty, and flexibility at the heart of R. The book develops the necessary skills to produce quality code that can be used in a variety of circumstances. You will learn: The fundamentals of R, including standard data types and functions Functional programming as a useful framework for solving wide classes of problems The positives and negatives of metaprogramming How to write fast, memory-efficient code This book not only helps current R users become R programmers but also shows existing programmers what's special about R. Intermediate R programmers can dive deeper into R and learn new strategies for solving diverse problems while programmers from other languages can learn the details of R and understand why R works the way it does. Introduction -- Foundations. Data structures -- Subsetting -- Vocabulary -- Style guide -- Functions -- OO field guide -- Environments -- Debugging, condition handling, and defensive programming -- Functional programming. Functional programming -- Functionals -- Function operators -- Computing on the language. Non-standard evaluation -- Expressions -- Domain specific languages -- Performance. Performance -- Optimising code -- Memory -- High performance functions with Rcpp -- R's C interface.},
author = {Wickham, Hadley.},
isbn = {9781466586963},
pages = {450},
publisher = {CRC Press},
title = {{Advanced R}},
year = {2015}
}
@article{Chambers2014,
abstract = {This paper reviews some programming techniques in R that have proved useful, particularly for substantial projects. These include several versions of object-oriented programming, used in a large num-ber of R packages. The review tries to clarify the origins and ideas behind the various versions, each of which is valuable in the appropri-ate context. R has also been strongly influenced by the ideas of functional pro-gramming and, in particular, by the desire to combine functional with object oriented programming. To clarify how this particular mix of ideas has turned out in the current R language and supporting software, the paper will first review the basic ideas behind object-oriented and functional programming, and then examine the evolution of R with these ideas providing context. Functional programming supports well-defined, defensible software giving reproducible results. Object-oriented programming is the mech-anism par excellence for managing complexity while keeping things sim-ple for the user. The two paradigms have been valuable in supporting major software for fitting models to data and numerous other statistical applications. The paradigms have been adopted, and adapted, distinctively in R. Functional programming motivates much of R but R does not enforce the paradigm. Object-oriented programming from a functional perspec-tive differs from that used in non-functional languages, a distinction that needs to be emphasized to avoid confusion. R initially replicated the S language from Bell Labs, which in turn was strongly influenced by earlier program libraries. At each stage, new ideas have been added, but the previous software continues to show its influence in the design as well. Outlining the evolution will further clar-ify why we currently have this somewhat unusual combination of ideas.},
archivePrefix = {arXiv},
arxivId = {arXiv:1409.3531v1},
author = {Chambers, John M},
doi = {10.1214/13-STS452},
eprint = {arXiv:1409.3531v1},
file = {:Users/adrianschmid/Library/Application Support/Mendeley Desktop/Downloaded/Chambers - 2014 - Object-Oriented Programming, Functional Programming and R.pdf:pdf},
journal = {Statistical Science},
keywords = {Programming languages,functional programming,object-oriented programming},
number = {2},
pages = {167--180},
title = {{Object-Oriented Programming, Functional Programming and R}},
url = {https://arxiv.org/pdf/1409.3531.pdf},
volume = {29},
year = {2014}
}
@misc{YihuiXie,
author = {{Yihui Xie}},
title = {{Testing R Packages - Yihui Xie}},
url = {https://yihui.name/en/2013/09/testing-r-packages/},
urldate = {2017-11-02}
}
@book{Peng2014,
abstract = {This book is about the fundamentals of R programming. You will get started with the basics of the language, learn how to manipulate datasets, how to write functions, and how to debug and optimize code. With the fundamentals provided in this book, you will have a solid foundation on which to build your data science toolbox.},
author = {Peng, Roger D.},
isbn = {9781365056826},
pages = {183},
publisher = {Leanpub},
title = {{R Programming for data science}},
year = {2014}
}
@book{Wickham2017,
abstract = {First edition. "This book introduces you to R, RStudio, and the tidyverse, a collection of R packages designed to work together to make data science fast, fluent, and fun. Suitable for readers with no previous programming experience"--Page 4 of cover. Part I. Explore. Data visualization with ggplot2 -- Workflow: basics -- Data transformation with dplyr -- Workflow: scripts -- Exploratory data analysis -- Workflow: projects -- Part II. Wrangle. Tibbles with tibble -- Data import with readr --Tidy data with tidyr -- Relational data with dplyr -- Strings with stringr -- Factors with forcats -- Dates and times with lubridate -- Part III. Program. Pipes with magrittr -- Functions -- Vectors -- Iteration with purrr -- Part IV. Model. Model basics with modelr -- Model building -- Many models with purrr and broom -- Part V. Communicate. R Markdown -- Graphics for communication with ggplot2 -- R Markdown formats -- R Markdown workflow.},
author = {Wickham, Hadley and Grolemund, Garrett},
isbn = {9781491910399},
pages = {492},
title = {{R for data science : import, tidy, transform, visualize, and model data}},
year = {2017}
}
@misc{Hester2017,
author = {{Hester Jim}},
title = {{How does covr work anyway?}},
url = {https://cran.r-project.org/web/packages/covr/vignettes/how{\_}it{\_}works.html},
urldate = {2017-10-19},
year = {2017}
}
@book{Hunt2000,
abstract = {Straight from the programming trenches, The Pragmatic Programmer cuts through the increasing specialization and technicalities of modern software development to examine the core process-taking a requirement and producing working, maintainable code that delights its users. It covers topics ranging from personal responsibility and career development to architectural techniques for keeping your code flexible and easy to adapt and reuse. Read this book, and youll learn how to:},
author = {Hunt, Andrew and Thomas, David},
isbn = {020161622X},
issn = {0740-7459},
pages = {352},
publisher = {Addison-Wesley},
title = {{The Pragmatic Programmer: From Journeyman to Master Andrew Hunt}},
url = {http://portal.acm.org/citation.cfm?id=320326},
year = {1999}
}
@article{Wilson2014,
abstract = {We describe a set of best practices for scientific software development, based on research and experience, that will improve scientists' productivity and the reliability of their software.},
archivePrefix = {arXiv},
arxivId = {arXiv:1210.0530v4},
author = {Wilson, Greg and Aruliah, D. A. and Brown, C. Titus and {Chue Hong}, Neil P. and Davis, Matt and Guy, Richard T. and Haddock, Steven H.D. and Huff, Kathryn D. and Mitchell, Ian M. and Plumbley, Mark D. and Waugh, Ben and White, Ethan P. and Wilson, Paul},
doi = {10.1371/journal.pbio.1001745},
editor = {Eisen, Jonathan A.},
eprint = {arXiv:1210.0530v4},
file = {:Users/adrianschmid/Library/Application Support/Mendeley Desktop/Downloaded/Wilson et al. - 2014 - Best Practices for Scientific Computing(2).pdf:pdf},
isbn = {1545-7885 (Electronic)$\backslash$r1544-9173 (Linking)},
issn = {15449173},
journal = {PLoS Biology},
month = {jan},
number = {1},
pages = {e1001745},
pmid = {24415924},
publisher = {Public Library of Science},
title = {{Best Practices for Scientific Computing}},
url = {http://dx.plos.org/10.1371/journal.pbio.1001745 http://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=3886731{\&}tool=pmcentrez{\&}rendertype=abstract{\%}5Cnhttp://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=3886731{\%}7B{\&}{\%}7Dtool=pmcentrez{\%}7B{\&}{\%}7Drendertype},
volume = {12},
year = {2014}
}
@article{Wickham2011,
abstract = {Software testing is important, but many of us don't do it because it is frustrating and boring. testthat is a new testing framework for R that is easy learn and use, and integrates with your existing workflow. This paper shows how, with illustrations from existing packages.},
author = {Wickham, Hadley},
issn = {2073-4859},
journal = {The R Journal},
number = {June},
pages = {5--10},
title = {{testthat: Get Started with Testing}},
url = {https://journal.r-project.org/archive/2011/RJ-2011-002/index.html},
volume = {3},
year = {2011}
}
@book{Wickham2015,
abstract = {Turn your R code into packages that others can easily download and use. This practical book shows you how to bundle reusable R functions, sample data, and documentation together by applying author Hadley Wickham's package development philosophy. In the process, you'll work with devtools, roxygen, and testthat, a set of R packages that automate common development tasks. Devtools encapsulates best practices that Hadley has learned from years of working with this programming language.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Wickham, Hadley},
booktitle = {Springer},
doi = {10.1017/CBO9781107415324.004},
eprint = {arXiv:1011.1669v3},
isbn = {978-1-4919-1059-7},
issn = {1098-6596},
pages = {202},
pmid = {25246403},
title = {{R Packages}},
year = {2015}
}
